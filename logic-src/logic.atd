type main_input = {
  p1_code : string;
}

type main_output = {
  winner : int;
  turns : state list;
}

type state = {
  turn : int;
  units : unit_list;
  teams : units_by_team;
  map : units_by_map;
}

type json <ocaml module="Yojson.Safe" t="t"> = abstract

type robot_input = {
  state : state;
  custom : json;
}

type robot_output = {
  actions : action_list;
  custom : json;
}

type id = string

type unit_list = (id * unit_) list <json repr="object">

type action_list = (id * action) list <json repr="object">

type units_by_team = (team * id list) list <json repr="object">

type units_by_map = id option list list

type unit_ = {
  type_ <json name="type">: unit_type;
  x : int;
  y : int;
  health : int;
  id : id;
  team : team;
(* next_action : action; *)
}

type team = string

type unit_type = [ Soldier ]

type action = {
  type_ <json name="type">: action_type;
  direction: direction;
}

type action_type = [ Move | Attack ]

type direction = [ Left | Right | Up | Down ]


