@import "../../node_modules/codemirror/lib/codemirror.css";

$spacers: (
        6: 5rem,
        7: 10rem,
);
$font-size-base: 1.2rem;
//$line-height-base: 1.2;
$code-font: Fantasque;
$font-family-base: $code-font;

$colors: (
        "black": black,
        "red": #F392B1,
        "blue": #578eb3,
        "orange": #EF8509,
        "dark-blue": #39ACFF,
        "light-red": #FCDEE7,
        "light-blue": #CAE9FF,
        "grey-1": hsl(0, 0, 39%),
        "grey-2": hsl(0, 0, 78%),
        "grey-3": hsl(0, 0, 94%),
        "grey-4": hsl(0, 0, 97%)
);

$border-1: 2px solid map_get($colors, "grey-2");
$border-2: 2px solid map_get($colors, "grey-3");
$border-3: 1px solid map_get($colors, "grey-3");


@import "node_modules/bootstrap/scss/bootstrap-reboot";
@import "node_modules/bootstrap/scss/utilities/flex";
@import "node_modules/bootstrap/scss/utilities/spacing";

.d-flex {
  display: flex;
}

.container {
  margin-left: auto;
  margin-right: auto;
  max-width: map_get($grid-breakpoints, lg);
}

.font-italic {
  font-style: italic;
}

.font-bold {
  font-weight: bold;
}

@import "./fantasque/stylesheet.css";
@import "./fixes";

@each $color, $value in $colors {
  .text-#{$color} {
    color: map_get($colors, $color) !important;
  }
}

//// global

h1, h2, h3, h4, h5, h6 {
  text-align: left;
  font-weight: normal !important;
}

h1 {
  margin-bottom: map_get($spacers, 5);
}

input {
  border: $border-1;
}

a {
  color: map_get($colors, "blue") !important;
}

button {
  color: map_get($colors, "blue");
  font-weight: bold;
}

.button {
  border: 2px solid map_get($colors, "blue");
  color: map_get($colors, "blue");
  background: none;
  padding: 0 0.5rem;

  &:disabled {
    border-color: map_get($colors, "light-blue");
    color: map_get($colors, "blue");
  }
}

.error {
  color: map_get($colors, "orange");
}

.internal-error {
  color: map_get($colors, "red");
}

.disappearing {
  animation-name: disappearingAnimation;
  animation-duration: 1000ms;
  animation-fill-mode: forwards;
}

@keyframes disappearingAnimation {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

//// tags

.panel {
  display: inline-flex;
  align-items: center;
  position: relative;
  border: $border-1;
  border-radius: 5px;
  padding: map-get($spacers, 1);

  li {
    margin: 0 map-get($spacers, 2);
  }

  .separator::after {
    position: absolute;
    height: 50%;
    border-right: $border-1;
    content: "";
    top: 0;
    bottom: 0;
    margin: auto;
  }
}

//// main.html

// https://css-tricks.com/couple-takes-sticky-footer/#article-header-id-3
html, body {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
}

.content {
  flex: 1 0 auto;
  height: 100%;
}

.footer {
  flex-shrink: 0;
}

.header {
  padding: map-get($spacers, 5);

  .links {
    & > * {
      margin-right: 0.8rem;
    }
  }
}

.footer {
  padding: map-get($spacers, 3);
  color: map_get($colors, "grey-1");
  border-top: $border-2;
}

//// index.html

.index {

  .overview {
    font-size: $h5-font-size;

    .rules {
      margin-left: map-get($spacers, 3);
      margin-top: map-get($spacers, 2);
      margin-bottom: map-get($spacers, 2);
    }
  }

}

//// viewCode.html
.view-code {
  textarea {
    width: 100%;
    height: 70vh;
    border: $border-2;
    padding: map-get($spacers, 3);
  }
}

//// robot/view.html
.robot-page {
  .actions {
    & > * {
      margin-right: map-get($spacers, 4);
    }
  }
}

//// the garage

.garage {
  height: 100%;

  ._app-root {
    height: 100%;

    ._bar {
      border-bottom: $border-2;
    }
    ._viewer {
      border-left: $border-2;
    }

    @import "./battle-viewer/src/css/main";

    ._app-root {
      height: 100%;
    }

    code-editor {
      .CodeMirror {
        height: 100%;
        border: 0;

        * {
          font-family: $code-font;
          line-height: 1.1;
        }
      }

      .CodeMirror-gutters {
        background: white;
        border-right: 0;
        width: 40px;
      }

      .CodeMirror-linenumber {
        color: map_get($colors, "grey-2");
      }

      .inline-error {
        color: map_get($colors, "orange") !important;
        position: relative;

        &::after {
          content: "";
          width: 100%;
          height: 3px;
          left: 0;
          right: 0;
          bottom: 0;
          position: absolute;
          background: map_get($colors, "orange");
        }
      }
    }
  }
}
