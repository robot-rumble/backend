$spacers: (
        6: 5rem,
        7: 10rem,
);
$font-size-base: 1.2rem;
//$line-height-base: 1.2;
$code-font: Fantasque;
$font-family-base: $code-font;

$colors: (
        "black": black,
        "red": #F392B1,
        "blue": #578eb3,
        "orange": #EF8509,
        "dark-blue": #39ACFF,
        "light-red": #FCDEE7,
        "light-blue": #CAE9FF,
        "grey-1": hsl(0, 0, 39),
        "grey-2": rgb(200, 200, 200),
        "grey-3": rgb(240, 240, 240)
);

$border-1: 2px solid map_get($colors, "grey-2");
$border-2: 2px solid map_get($colors, "grey-3");

@import "node_modules/bootstrap/scss/bootstrap-grid";
@import "node_modules/bootstrap/scss/bootstrap-reboot";
@import "node_modules/bootstrap/scss/type";
@import "node_modules/bootstrap/scss/utilities";
@import "node_modules/bootstrap/scss/_variables";
@import "node_modules/bootstrap/scss/_functions";
@import "node_modules/bootstrap/scss/mixins/_breakpoints";
@import "./fantasque/stylesheet.css";
@import "./fixes.scss";

@each $color, $value in $colors {
  .text-#{$color} {
    color: map_get($colors, $color) !important;
  }
}


//// global

h1, h2, h3, h4, h5, h6 {
  text-align: left;
  font-weight: normal !important;
}

h1 {
  margin-bottom: map_get($spacers, 5);
}

input {
  border: $border-1;
}

a {
  color: map_get($colors, "blue") !important;
}

button {
  color: map_get($colors, "blue");
  font-weight: bold;
}

.button {
  border: 2px solid map_get($colors, "blue");
  color: map_get($colors, "blue");
  background: none;
  padding: 0 0.5rem;

  &:disabled {
    border-color: map_get($colors, "light-blue");
    color: map_get($colors, "blue");
  }
}

.error {
  color: map_get($colors, "orange");
}


//// main.html

// https://css-tricks.com/couple-takes-sticky-footer/#article-header-id-3
html, body {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
}

.content {
  flex: 1 0 auto;
  height: 100%;
}

.footer {
  flex-shrink: 0;
}

.header {
  padding: map-get($spacers, 5);

  .links {
    & > * {
      margin-right: 0.8rem;
    }
  }
}

.footer {
  padding: map-get($spacers, 3);
  color: map_get($colors, "grey-1");
  border-top: $border-2;
}

//// index.html

.index {

  .overview {
    font-size: $h5-font-size;

    .rules {
      margin-left: map-get($spacers, 3);
      margin-top: map-get($spacers, 2);
      margin-bottom: map-get($spacers, 2);
    }
  }

}

//// robot renderer

.elm-renderer {

  .log {
    width: 100%;
    background: map_get($colors, "grey-3");
  }

  .arrow-button {
    padding: 0 0.5rem;

    &:disabled {
      color: map_get($colors, "grey-2");
    }
  }

  $grid: rgba(135, 135, 135, .1);

  .renderer-wrapper {
    /* https://stackoverflow.com/questions/5445491/height-equal-to-dynamic-width-css-fluid-layout */
    width: 100%;
    height: 0;
    padding-top: 100%;
    position: relative;

    .renderer {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

  .renderer {
    display: grid;

    .grid-row, .grid-col {
      border: 1px solid $grid;
    }

    .obj {
      position: relative;

      &.unit {
        &.team-Red {
          background: map_get($colors, "light-red");

          .health-bar {
            background: map_get($colors, "red");
          }
        }

        &.team-Blue {
          background: map_get($colors, "light-blue");

          .health-bar {
            background: map_get($colors, "blue");
          }
        }
      }

      &.terrain {
        background: map_get($colors, "grey-3");
        z-index: -1;
      }

      .health-bar {
        position: absolute;
        margin: auto;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
      }
    }
  }

  .progress-holder {
    position: relative;

    .progress {
      background: map_get($colors, "blue");
      position: absolute;
      height: 100%;
    }
  }


  code-editor {
    .CodeMirror {
      height: 100%;
      border: 0;

      * {
        font-family: $code-font;
        line-height: 1.1;
      }
    }

    .CodeMirror-gutters {
      background: white;
      border-right: 0;
      width: 40px;
    }

    .CodeMirror-linenumber {
      color: map_get($colors, "grey-2");
    }
  }

  .inline-error {
    color: map_get($colors, "orange") !important;
    position: relative;

    &::after {
      content: "";
      width: 100%;
      height: 3px;
      left: 0;
      right: 0;
      bottom: 0;
      position: absolute;
      background: map_get($colors, "orange");
    }
  }

  .internal-error {
    color: map_get($colors, "red");
  }

  .ws-pre {
    white-space: pre;
  }

}
